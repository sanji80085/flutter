import 'package:flutter/material.dart';

void main() {
  runApp(QuizApp());
}

class QuizApp extends StatefulWidget {
  @override
  _QuizAppState createState() => _QuizAppState();
}

class _QuizAppState extends State<QuizApp> {
  int _currentQuestionIndex = 0;
  int _score = 0;

  List<Question> _questions = [
    Question('Flutter is developed by Google.', true),
    Question('Dart is a statically-typed language.', true),
    Question('Widgets in Flutter are stateless.', false),
    Question('Widgets in Flutter are stateless.', false),
    Question('Jee exam is given to get admission in IIM', false),
    Question('Tokyo is the Capital of Japan.', true),
    Question('India Independence is in 1947.', true),

  ];

  void _checkAnswer(bool userAnswer) {
    bool correctAnswer = _questions[_currentQuestionIndex].answer;

    setState(() {
      if (userAnswer == correctAnswer) {
        _score++;
      }

      if (_currentQuestionIndex < _questions.length - 1) {
        _currentQuestionIndex++;
      } else {
        // Quiz completed, show a dialog with the final score
        showDialog(
          context: context,
          builder: (BuildContext context) {
            return AlertDialog(
              title: Text('Quiz Completed'),
              content: Text('Your score: $_score'),
              actions: <Widget>[
                TextButton(
                  child: Text('OK'),
                  onPressed: () {
                    Navigator.of(context).pop();
                    setState(() {
                      _currentQuestionIndex = 0;
                      _score = 0;
                    });
                  },
                ),
              ],
            );
          },
        );
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Simple Quiz App'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              Text(
                _questions[_currentQuestionIndex].questionText,
                style: TextStyle(fontSize: 20.0),
                textAlign: TextAlign.center,
              ),
              SizedBox(height: 20.0),
              TextButton(
                child: Text(
                  'True',
                  style: TextStyle(fontSize: 18.0),
                ),
                onPressed: () => _checkAnswer(true),
              ),
              ElevatedButton(
                child: Text(
                  'False',
                  style: TextStyle(fontSize: 18.0),
                ),
                onPressed: () => _checkAnswer(false),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class Question {
  final String questionText;
  final bool answer;

  Question(this.questionText, this.answer);
}
